#!/usr/bin/env -S node --no-warnings --loader ts-node/esm
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable camelcase */
const tstest_1 = require("tstest");
const vm_1 = __importDefault(require("vm"));
const mustache_1 = __importDefault(require("mustache"));
const partial_lookup_js_1 = require("../partial-lookup.js");
const sidecar_metadata_fixture_js_1 = require("../../../tests/fixtures/sidecar-metadata.fixture.js");
const mod_js_1 = require("../../wrappers/mod.js");
(0, tstest_1.test)('render rpc-exports()', async (t) => {
    const SIDECAR_METADATA = (0, sidecar_metadata_fixture_js_1.getSidecarMetadataFixture)();
    const view = (0, mod_js_1.wrapView)(SIDECAR_METADATA);
    const template = await (0, partial_lookup_js_1.partialLookup)('rpc-exports.mustache');
    // console.log(template)
    const code = mustache_1.default.render(template, view);
    // console.log(code)
    /**
     * https://nodejs.org/api/vm.html
     */
    const context = {
        __sidecar__agentMethod_Function_wrapper: () => { },
        __sidecar__anotherCall_Function_wrapper: () => { },
        __sidecar__pointerMethod_Function_wrapper: () => { },
        __sidecar__testMethod_Function_wrapper: () => { },
        __sidecar__voidMethod_Function_wrapper: () => { },
        rpc: {
            exports: {},
        },
    };
    vm_1.default.createContext(context); // Contextify the object.
    vm_1.default.runInContext(code, context);
    t.ok('testMethod' in context.rpc.exports, 'should export testMethod');
    t.ok('pointerMethod' in context.rpc.exports, 'should export pointerMethod');
    t.ok('anotherCall' in context.rpc.exports, 'should export anotherCall');
    t.ok('agentMethod' in context.rpc.exports, 'should export agentCall');
    /**
     * Do not export Hook/Interceptor methods
     */
    t.notOk('hookMethod' in context.rpc.exports, 'should not export hookMethod');
});
//# sourceMappingURL=rpc-exports.spec.js.map