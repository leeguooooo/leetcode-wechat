#!/usr/bin/env -S node --no-warnings --loader ts-node/esm
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable camelcase */
const tstest_1 = require("tstest");
const payload_cjs_1 = __importDefault(require("./payload.cjs"));
const log_cjs_1 = __importDefault(require("./log.cjs"));
const { __sidecar__payloadLog } = payload_cjs_1.default;
const { log } = log_cjs_1.default;
global['__sidecar__payloadLog'] = __sidecar__payloadLog;
(0, tstest_1.test)('log()', async (t) => {
    const spy = tstest_1.sinon.spy();
    /**
     * Frida `send` method
     */
    global['send'] = spy;
    log.level(2);
    log.verbose('Test', 'message: %s', 'hello');
    const EXPECTED = {
        payload: {
            level: 'verbose',
            message: 'message: hello',
            prefix: 'Test',
        },
        type: 'log',
    };
    t.equal(spy.callCount, 1, 'should call spy');
    t.same(spy.args[0][0], EXPECTED, 'should get correct payload event');
});
//# sourceMappingURL=log.spec.js.map