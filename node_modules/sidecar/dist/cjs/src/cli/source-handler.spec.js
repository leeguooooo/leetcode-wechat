#!/usr/bin/env -S node --no-warnings --loader ts-node/esm --experimental-vm-modules
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const tstest_1 = require("tstest");
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const string_similarity_1 = __importDefault(require("string-similarity"));
const source_handler_js_1 = require("./source-handler.js");
const cjs_js_1 = require("../cjs.js");
(0, tstest_1.test)('sourceHandler()', async (t) => {
    const CLASS_FILE = path_1.default.join(cjs_js_1.codeRoot, 'examples', 'chatbox-sidecar.ts');
    const FIXTURE_FILE = path_1.default.join(cjs_js_1.codeRoot, 'tests', 'fixtures', 'sidecar-dump.source.chatbox-sidecar.js.fixture');
    const normalize = (text) => text
        /**
         * Strip file path line for CI under Linux & Windows
         */
        .replace(/^.*chatbox.*$/gm, '')
        .replace(/[^\S\r\n]+/g, ' ')
        .replace(/^ +$/gm, '') // remove spaces in empty line
        .replace(/\r/g, '') // Windows will add \r, which need to be removed for comparing
        .replace(/\n+$/s, ''); // strip all the ending newlines
    const FIXTURE = await fs_1.default
        .readFileSync(FIXTURE_FILE)
        .toString();
    const source = await (0, source_handler_js_1.sourceHandler)({ file: CLASS_FILE });
    // console.info('source:', source)
    /**
     * Generate the testing fixture file, Huan(202107)
     *
     *  When we have updated the examples/chatbox-sidecar.ts file,
     *  we need to update the `tests/fixtures/sidecar-dump.source.chatbox-sidecar.js.fixture`
     *  so that the unit testing can be match the updated frida agent source code.
     */
    // fs.writeFileSync('t.js', source)
    /**
     * We remove all spaces in the file so that the comparision will ignore all spaces
     */
    const normalizedSource = normalize(source);
    const normalizedFixture = normalize(FIXTURE);
    /**
     * String Similarity Comparision in JS with Examples
     *  https://sumn2u.medium.com/string-similarity-comparision-in-js-with-examples-4bae35f13968
     */
    const similarity = string_similarity_1.default.compareTwoStrings(normalizedFixture, normalizedSource);
    void normalizedSource;
    void normalizedFixture;
    // console.log('normalizedSource:', normalizedSource)
    // console.log('####################')
    // console.log('normalizedFixture:', normalizedFixture)
    // console.log('###:', normalizedSource.length)
    const THRESHOLD = 0.95;
    const ok = similarity > THRESHOLD;
    // console.log('similarity:', similarity)
    t.ok(ok, `should get the source from ts file with similarity(${Math.floor(similarity * 100)}%) > ${THRESHOLD * 100}%`);
});
//# sourceMappingURL=source-handler.spec.js.map