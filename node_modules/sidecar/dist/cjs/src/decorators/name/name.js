"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PARAMETER_NAME_SYMBOL = exports.Name = exports.getParameterName = void 0;
/**
 * Data Type:
 *  https://en.wikipedia.org/wiki/Data_type
 *
 * TypeScript Decorators: Parameter Decorators
 *  https://blog.wizardsoftheweb.pro/typescript-decorators-parameter-decorators/
 *
 * TypeScript Decorators: Parameter Decorators
 *  https://blog.wotw.pro/typescript-decorators-parameter-decorators/
 */
const config_js_1 = require("../../config.js");
const PARAMETER_NAME_SYMBOL = Symbol('parameterName');
exports.PARAMETER_NAME_SYMBOL = PARAMETER_NAME_SYMBOL;
/**
 * Credit: https://blog.wotw.pro/typescript-decorators-parameter-decorators/
 */
function updateParameterName(target, propertyKey, parameterIndex, name) {
    // Pull the array of parameter names
    const parameterNameList = Reflect.getOwnMetadata(PARAMETER_NAME_SYMBOL, target, propertyKey) || [];
    // Add the current parameter name
    parameterNameList[parameterIndex] = name;
    // Update the parameter names
    Reflect.defineMetadata(PARAMETER_NAME_SYMBOL, parameterNameList, target, propertyKey);
}
function getParameterName(target, propertyKey, parameterIndex) {
    // Pull the array of parameter names
    const parameterNameList = Reflect.getMetadata(PARAMETER_NAME_SYMBOL, target, propertyKey) || [];
    return parameterNameList[parameterIndex];
}
exports.getParameterName = getParameterName;
function Name(parameterName) {
    config_js_1.log.verbose('Sidecar', '@Name(%s)', parameterName);
    return function nameParameterDecorator(target, propertyKey, parameterIndex) {
        config_js_1.log.verbose('Sidecar', '@Name(%s) nameParameterDecorator(%s, %s, %s)', parameterName, target.constructor.name, propertyKey, parameterIndex);
        updateParameterName(target, propertyKey, parameterIndex, parameterName);
    };
}
exports.Name = Name;
//# sourceMappingURL=name.js.map