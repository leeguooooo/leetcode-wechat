/// <reference types="node" />
import type { NativeType, PointerType } from './frida.js';
/**
 * Reflect Metadata:
 *    design:type
 *    design:paramtypes
 *    design:returntype
 *  http://blog.wolksoftware.com/decorators-metadata-reflection-in-typescript-from-novice-to-expert-part-4#3-basic-type-serialization_1
 */
export declare type ReflectedDesignType = typeof undefined | typeof Boolean | typeof Buffer | typeof Number | typeof Promise | typeof String;
declare const guardNativeType: (nativeType: NativeType) => (designType: ReflectedDesignType) => void;
declare const guardPointerType: (pointerTypeList: PointerType[]) => (designType: ReflectedDesignType) => void;
export { guardNativeType, guardPointerType, };
//# sourceMappingURL=type-guard.d.ts.map