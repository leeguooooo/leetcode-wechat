#!/usr/bin/env -S node --no-warnings --loader ts-node/esm
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tstest_1 = require("tstest");
const name_helpers_js_1 = require("./name-helpers.js");
(0, tstest_1.test)('bufName()', async (t) => {
    const TEST_LIST = [
        [
            ['test', 0, 1],
            'test_Memory_0_1',
        ],
        [
            ['demo', 3],
            'demo_Memory_3',
        ],
    ];
    for (const [args, expected] of TEST_LIST) {
        const name = (0, name_helpers_js_1.bufName)(...args);
        t.equal(name, expected, `should get the expected name from "bufName(${args.join(', ')})"`);
    }
});
(0, tstest_1.test)('argName()', async (t) => {
    const TEST_LIST = [
        [
            0,
            'args[0]',
        ],
        [
            3,
            'args[3]',
        ],
    ];
    for (const [idx, expected] of TEST_LIST) {
        const name = (0, name_helpers_js_1.argName)(idx);
        t.equal(name, expected, `should get the expected name from "argName(${idx})"`);
    }
});
(0, tstest_1.test)('nativeArgName()', async (t) => {
    const TEST_LIST = [
        [
            ['test', 0],
            'test_NativeArg_0',
        ],
        [
            ['demo', 3],
            'demo_NativeArg_3',
        ],
    ];
    for (const [args, expected] of TEST_LIST) {
        const name = (0, name_helpers_js_1.nativeArgName)(...args);
        t.equal(name, expected, `should get the expected name from "nativeArgName(${args.join(', ')})"`);
    }
});
(0, tstest_1.test)('jsArgName()', async (t) => {
    const TEST_LIST = [
        [
            ['test', 0],
            'test_JsArg_0',
        ],
        [
            ['demo', 3],
            'demo_JsArg_3',
        ],
    ];
    for (const [args, expected] of TEST_LIST) {
        const name = (0, name_helpers_js_1.jsArgName)(...args);
        t.equal(name, expected, `should get the expected name from "jsArgName(${args.join(', ')})"`);
    }
});
//# sourceMappingURL=name-helper.spec.js.map