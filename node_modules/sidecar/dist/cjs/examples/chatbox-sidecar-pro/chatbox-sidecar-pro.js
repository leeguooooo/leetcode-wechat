"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChatboxSidecarPro = void 0;
/**
 *   Sidecar - https://github.com/huan/sidecar
 *
 *   @copyright 2021 Huan LI (李卓桓) <https://github.com/huan>
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 */
const mod_js_1 = require("../../src/mod.js");
const sidecar_config_js_1 = require("./sidecar-config.js");
let ChatboxSidecarPro = class ChatboxSidecarPro extends mod_js_1.SidecarBody {
    mo(content) { return (0, mod_js_1.Ret)(content); }
    mt(content) { return (0, mod_js_1.Ret)(content); }
};
__decorate([
    (0, mod_js_1.Call)((0, sidecar_config_js_1.targetAddress)('mo')),
    (0, mod_js_1.RetType)('int'),
    __param(0, (0, mod_js_1.ParamType)('pointer', 'Utf8String')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", Promise)
], ChatboxSidecarPro.prototype, "mo", null);
__decorate([
    (0, mod_js_1.Hook)((0, sidecar_config_js_1.targetAddress)('mt')),
    __param(0, (0, mod_js_1.ParamType)('pointer', 'Utf8String')),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", void 0)
], ChatboxSidecarPro.prototype, "mt", null);
ChatboxSidecarPro = __decorate([
    (0, mod_js_1.Sidecar)([
        (0, sidecar_config_js_1.targetProgram)(), // chatbox-linux
    ])
], ChatboxSidecarPro);
exports.ChatboxSidecarPro = ChatboxSidecarPro;
//# sourceMappingURL=chatbox-sidecar-pro.js.map