"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Sidecar example agent
 *
 * Huan <zixia@zixia.net>, June 24, 2021
 *  https://github.com/huan/sidecar
 */
const brolog_1 = require("brolog");
brolog_1.log.level('silly');
brolog_1.log.verbose('Agent', 'Entered');
const MO_ADDR = ptr(0x5631598e21c9);
const MT_ADDR = ptr(0x5631598e21f4);
const moNativeFunc = new NativeFunction(MO_ADDR, 'void', ['pointer']);
function mo(content) {
    brolog_1.log.verbose('Agent', 'mo(%s)', content);
    moNativeFunc(Memory.allocUtf8String(content));
}
Interceptor.attach(MT_ADDR, {
    onEnter: args => {
        brolog_1.log.verbose('Agent', 'Interceptor.attach() onEnter(%s)', args[0].readUtf8String());
        send({
            payload: {
                content: args[0].readUtf8String(),
            },
            type: 'MT_MESSAGE',
        });
    },
});
const fridaRecv = (message, data) => {
    brolog_1.log.verbose('Agent', 'fridaRec(%s, %s)', JSON.stringify(message), data);
    mo(JSON.stringify(message));
    recv(fridaRecv);
};
brolog_1.log.verbose('Agent', 'recv(fridaRecv) registering...');
recv(fridaRecv);
brolog_1.log.verbose('Agent', 'recv(fridaRecv) registered');
function init() {
    brolog_1.log.verbose('Agent', 'init()');
}
rpc.exports = {
    init,
    mo,
};
//# sourceMappingURL=agent.js.map