"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Sidecar example agent
 *
 * Huan <zixia@zixia.net>, June 24, 2021
 *  https://github.com/huan/sidecar
 */
const brolog_1 = require("brolog");
const frida = __importStar(require("../../../src/frida"));
const clean_js_1 = require("./clean.js");
const load_agent_source_js_1 = require("./load-agent-source.js");
const script_destroyed_handler_js_1 = require("./script-destroyed-handler.js");
const script_message_handler_js_1 = require("./script-message-handler.js");
brolog_1.log.level('silly');
const scriptPostTest = (script) => () => {
    return script.post({
        data: 'XXX OOO',
        type: 'test',
    });
};
async function main() {
    const session = await frida.attach('messaging');
    const agentSource = await (0, load_agent_source_js_1.loadAgentSource)();
    const script = await session.createScript(agentSource);
    script.message.connect(script_message_handler_js_1.scriptMessageHandler);
    script.destroyed.connect(script_destroyed_handler_js_1.scriptDestroyedHandler);
    process.on('SIGINT', () => (0, clean_js_1.clean)(session, script));
    process.on('SIGTERM', () => (0, clean_js_1.clean)(session, script));
    await script.load();
    const timer = setInterval(scriptPostTest(script), 1000);
    timer.unref();
    try {
        await script.exports['init']();
    }
    catch (e) {
        console.error(e);
    }
    // frida.resume(pid)
    try {
        await script.exports['mo']('Sidebar: new messsage send by script.exports.mo()');
    }
    catch (e) {
        console.error(e);
    }
}
main()
    .catch(console.error);
//# sourceMappingURL=sidecar.js.map