import fs from 'fs';
import path from 'path';
import { log } from '../../config.js';
const sidecarTargetObjProcess = (target) => ({
    target,
    type: 'process',
});
const sidecarTargetObjSpawn = (target) => ({
    target,
    type: 'spawn',
});
const normalizeSidecarTarget = (target) => {
    if (typeof target === 'string' || typeof target === 'number') {
        return sidecarTargetObjProcess(target);
    }
    else if (Array.isArray(target)) {
        const command = path.resolve(process.cwd(), target[0]);
        if (fs.existsSync(command)) {
            log.verbose('Sidecar', 'normalizeSidecarTarget() spawn command found: "%s"', command);
            target[0] = command;
        }
        else {
            log.warn('Sidecar', 'normalizeSidecarTarget() spawn command not found: "%s"', command);
        }
        return sidecarTargetObjSpawn(target);
    }
    else {
        return target;
    }
};
const isSidecarTargetProcess = (target) => typeof target === 'object' && !Array.isArray(target) && target.type === 'process';
const isSidecarTargetSpawn = (target) => typeof target === 'object' && !Array.isArray(target) && target.type === 'spawn';
export { normalizeSidecarTarget, isSidecarTargetProcess, isSidecarTargetSpawn, };
//# sourceMappingURL=target.js.map