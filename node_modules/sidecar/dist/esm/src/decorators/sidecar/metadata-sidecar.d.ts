import type { TypeChain } from '../../frida.js';
import type { TargetPayloadObj, FunctionTargetType } from '../../function-target.js';
import type { SidecarTargetObj } from './target.js';
export interface SidecarMetadataFunctionDescription {
    name: string;
    paramTypeList: TypeChain[];
    retType?: TypeChain;
    target: TargetPayloadObj;
}
export declare type SidecarMetadataFunctionTypeDescription = {
    [type in FunctionTargetType]?: SidecarMetadataFunctionDescription;
};
export interface SidecarMetadata {
    nativeFunctionList: SidecarMetadataFunctionTypeDescription[];
    interceptorList: SidecarMetadataFunctionTypeDescription[];
    initAgentScript?: string;
    sidecarTarget?: SidecarTargetObj;
}
declare function updateMetadataSidecar(target: any, view: SidecarMetadata): void;
declare function getMetadataSidecar(target: Object): undefined | SidecarMetadata;
export { getMetadataSidecar, updateMetadataSidecar, };
//# sourceMappingURL=metadata-sidecar.d.ts.map